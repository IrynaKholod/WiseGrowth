{"version":3,"file":"static/js/315.a6472eb7.chunk.js","mappings":"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","sources":["Api/Api.jsx","components/VideoPlayer/VideoPlayer.jsx","components/LessonsList/LessonsList.stiled.js","components/LessonsList/LessonsList.jsx","pages/Course/Course.styled.js","pages/Course/Course.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.wisey.app/api/v1';\n// const PROXY_URL = \"https://cors-proxy.fringe.zone/\";\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n});\n\nconst token = {\n  set(token) {\n    instance.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    instance.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const GetToken = async () => {\n  try {\n    const { data } = await instance.get(\n      '/auth/anonymous?platform=subscriptions'\n    );\n    token.set(data.token);\n    return data.token;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const GetAllCourses = async () => {\n  await GetToken();\n  const response = await instance.get('/core/preview-courses');\n  return response;\n};\n\nexport const GetCourseById = async id => {\n  await GetToken();\n  const response = await instance.get(`/core/preview-courses/${id}`);\n  return response.data;\n};\n","import Hls from 'hls.js';\n\nexport const VideoPlayer = (link, videoElement, startPosition, playbackRate) => {\n  let hls = null;\n  if (Hls.isSupported()) {\n    hls = new Hls({ startPosition: startPosition });\n    hls.on(Hls.Events.MEDIA_ATTACHED, function () {\n      console.log('video and hls.js are now bound together !');\n    });\n    hls.on(Hls.Events.MANIFEST_PARSED, function (event, data) {\n      console.log(\n        'manifest loaded, found ' + data.levels.length + ' quality level'\n      );\n    });\n    hls.loadSource(`${link}`);\n    // bind them together\n    hls.attachMedia(videoElement);\n\n    // Add playback rate functionality\n    if (playbackRate) {\n      videoElement.playbackRate = playbackRate;\n    }\n  }\n  return hls;\n};\n\n\n","import styled from 'styled-components';\nimport { ImEyeBlocked,\n  } from 'react-icons/im';\n\nexport const LessonsListStyle = styled.ul`\n  margin-left: 15px;\n  list-style: square;\n`;\n\nexport const LessonsListItem = styled.li`\n  font-size: 20px;\n  cursor: pointer;\n  margin-bottom: 10px;\n\n  &:hover {\n    color: rgba(72, 37, 209, 255);\n  }\n\n`;\n\nexport const LockedIcon = styled(ImEyeBlocked)`\n  color: rgba(72, 37, 209, 255);\n`;\n\nexport const LessonLink =styled.a`\n&:active{\n  color: rgba(72, 37, 209, 255);\n}\n\n`","import React from 'react';\nimport {\n  LessonsListItem,\n  LockedIcon,\n  LessonsListStyle,\n  LessonLink\n} from './LessonsList.stiled';\nimport {ImPointLeft} from \"react-icons/im\";\n\nconst LessonsList = ({ course, setCurrentLesson, currentLesson }) => {\n  const { lessons } = course || {};\n\n  if (!lessons || !Array.isArray(lessons)) {\n    return null;\n  }\n\n  return (\n    <div>\n      <LessonsListStyle>\n        {lessons.map(lesson => {\n          const isActive = lesson === currentLesson;\n          const isLocked = lesson.status === \"locked\";\n          const linkClassName = isActive ? \"active\" : \"\";\n          return (\n            <LessonsListItem key={lesson.id}>\n              <LessonLink\n                href={lesson.link}\n                onClick={(e) => {\n                  e.preventDefault();\n                  setCurrentLesson(lesson);\n                }}\n                disabled={isLocked}\n                className={linkClassName}\n              >\n                {lesson.title}\n                {isActive && <span> <ImPointLeft/></span>}\n              </LessonLink>\n              {isLocked && (\n                <span>\n                  {' '}\n                  &nbsp; &nbsp; <LockedIcon />\n                </span>\n              )}\n            </LessonsListItem>\n          );\n        })}\n      </LessonsListStyle>\n    </div>\n  );\n};\n\nexport default LessonsList;","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LessonWrapper = styled.div`\n  @media (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n  }\n`;\n\nexport const VideoWrapper = styled.div`\n  @media (min-width: 768px) {\n   flex: 1;\n  }\n`\n\nexport const SideLessonInfo = styled.div`\n  @media (min-width: 768px) {\n    flex: 1;\n    margin-top: 105px;\n    margin-left: 30px;\n  }\n`;\n\nexport const BackLink = styled(NavLink)`\n  display: block;\n  margin-bottom: 15px;\n  &:hover {\n    color: rgba(72, 37, 209, 255);\n  }\n`;\n\nexport const CourseTitle = styled.h2`\n  margin-bottom: 15px;\n  font-size: 28px;\n`;\n\nexport const VideoCourse = styled.video`\n  width: 100%;\n  margin-bottom: 15px;\n  @media (min-width: 768px) {\n    flex: 1;\n  }\n`;\n\nexport const MassegeTytle = styled.h2`\n  margin-top: 150px;\n  margin-bottom: 150px;\n  color: rgba(72, 37, 209, 255);\n  text-align: center;\n`;\n\nexport const LessonsTitle = styled.h3`\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const LessonDescription = styled.p`\n  margin-bottom: 15px;\n  text-align: center;\n  font-size: 20px;\n  line-height: 1.5em;\n  color: grey;\n  @media (min-width: 768px) {\n    text-align: left;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { GetCourseById } from '../../Api/Api';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { VideoPlayer } from '../../components/VideoPlayer/VideoPlayer';\nimport LessonsList from '../../components/LessonsList/LessonsList';\nimport {\n  BackLink,\n  VideoCourse,\n  CourseTitle,\n  MassegeTytle,\n  LessonsTitle,\n  LessonDescription,\n  LessonWrapper,\n  SideLessonInfo,\n  VideoWrapper\n} from './Course.styled';\n\nconst Course = () => {\n  const { courseId } = useParams();\n  const [course, setCourse] = useState({});\n  const [currentLesson, setCurrentLesson] = useState(null);\n  const [startVideoWith, setstartVideoWith] = useState(-1);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/courses';\n\n  const handleLessonClick = lesson => {\n    setCurrentLesson(lesson);\n  };\n\n  useEffect(() => {\n    async function fetchCourseByID() {\n      try {\n        const response = await GetCourseById(courseId);\n        if (response) {\n          setCourse(response);\n        } else {\n          console.log('Error: response does not contain results');\n        }\n      } catch (error) {\n        console.log(`Error: ${error.message}`);\n      }\n    }\n\n    fetchCourseByID();\n  }, [courseId]);\n\n  useEffect(() => {\n    if (!course || !course.lessons || course.lessons.length === 0) {\n      return;\n    }\n    setCurrentLesson(course.lessons[0]);\n  }, [course]);\n\n  useEffect(() => {\n    if (!currentLesson) {\n      return;\n    }\n    if (currentLesson.status === 'locked') {\n      return;\n    }\n    const videoElement = document.getElementById(courseId);\n    const time = JSON.parse(\n      localStorage.getItem(`Lesson-id-${currentLesson.id}`)\n    );\n    if (time) {\n      setstartVideoWith(time);\n    }\n    const hls = VideoPlayer(currentLesson.link, videoElement, startVideoWith);\n    return () => {\n      hls.destroy();\n    };\n  }, [currentLesson, courseId, startVideoWith]);\n\n  const saveCurrentTimeVideo = e => {\n    if (!e.target.currentTime) {\n      return;\n    }\n    localStorage.setItem(\n      `Lesson-id-${currentLesson.id}`,\n      JSON.stringify(Math.floor(e.target.currentTime))\n    );\n  };\n\n  return (\n    <>\n      <LessonWrapper>\n        <VideoWrapper>\n          <BackLink to={backLinkHref}>Go back</BackLink>\n          <CourseTitle>{course.title}</CourseTitle>\n          {currentLesson?.status !== 'locked' ? (\n            <VideoCourse\n              id={courseId}\n              controls\n              width=\"100%\"\n              autoPlay\n              onTimeUpdate={e => saveCurrentTimeVideo(e)}\n            ></VideoCourse>\n          ) : (\n            <MassegeTytle>\n              For viewing the video, please upgrade to a premium account.\n            </MassegeTytle>\n          )}\n        </VideoWrapper>\n        <SideLessonInfo>\n          <LessonDescription>{course.description}</LessonDescription>\n          <LessonsTitle>Lessons:</LessonsTitle>\n          <LessonsList\n            course={course}\n            setCurrentLesson={handleLessonClick}\n            currentLesson={currentLesson}\n          />\n        </SideLessonInfo>\n      </LessonWrapper>\n    </>\n  );\n};\n\nexport default Course;\n"],"names":["instance","axios","baseURL","token","defaults","headers","common","Authorization","GetToken","get","data","console","log","GetAllCourses","response","GetCourseById","id","VideoPlayer","link","videoElement","startPosition","playbackRate","hls","Hls","on","event","levels","length","loadSource","attachMedia","LessonsListStyle","styled","LessonsListItem","LockedIcon","ImEyeBlocked","LessonLink","course","setCurrentLesson","currentLesson","lessons","Array","isArray","map","lesson","isActive","isLocked","status","linkClassName","href","onClick","e","preventDefault","disabled","className","title","LessonWrapper","VideoWrapper","SideLessonInfo","BackLink","NavLink","CourseTitle","VideoCourse","MassegeTytle","LessonsTitle","LessonDescription","courseId","useParams","useState","setCourse","startVideoWith","setstartVideoWith","backLinkHref","useLocation","state","from","useEffect","message","fetchCourseByID","document","getElementById","time","JSON","parse","localStorage","getItem","destroy","to","controls","width","autoPlay","onTimeUpdate","target","currentTime","setItem","stringify","Math","floor","saveCurrentTimeVideo","description"],"sourceRoot":""}